// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minefield.Data;

#nullable disable

namespace Minefield.Data.Migrations
{
    [DbContext(typeof(MinefieldDbContext))]
    [Migration("20250926003409_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Minefield.Entities.MinefieldUser", b =>
                {
                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ServerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AegisCharges")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentOdds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentStreak")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasGuardian")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LifelineCharges")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("LifelineProviderId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("LifelineProviderServerId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("LifelineTargetId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("LifelineTargetServerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LifetimeCurrency")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LuckCharges")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessagesSinceAegis")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessagesSinceGuardian")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("SacrificeProviderId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("SacrificeProviderServerId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("SacrificeTargetId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("SacrificeTargetServerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SymbioteCharges")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("SymbioteProviderId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("SymbioteProviderServerId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("SymbioteTargetId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("SymbioteTargetServerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalMessages")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "ServerId");

                    b.HasIndex("LifelineTargetId", "LifelineTargetServerId")
                        .IsUnique();

                    b.HasIndex("SacrificeTargetId", "SacrificeTargetServerId")
                        .IsUnique();

                    b.HasIndex("SymbioteTargetId", "SymbioteTargetServerId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Minefield.Entities.MinefieldUser", b =>
                {
                    b.HasOne("Minefield.Entities.MinefieldUser", "LifelineTarget")
                        .WithOne("LifelineProvider")
                        .HasForeignKey("Minefield.Entities.MinefieldUser", "LifelineTargetId", "LifelineTargetServerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Minefield.Entities.MinefieldUser", "SacrificeTarget")
                        .WithOne("SacrificeProvider")
                        .HasForeignKey("Minefield.Entities.MinefieldUser", "SacrificeTargetId", "SacrificeTargetServerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Minefield.Entities.MinefieldUser", "SymbioteTarget")
                        .WithOne("SymbioteProvider")
                        .HasForeignKey("Minefield.Entities.MinefieldUser", "SymbioteTargetId", "SymbioteTargetServerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LifelineTarget");

                    b.Navigation("SacrificeTarget");

                    b.Navigation("SymbioteTarget");
                });

            modelBuilder.Entity("Minefield.Entities.MinefieldUser", b =>
                {
                    b.Navigation("LifelineProvider");

                    b.Navigation("SacrificeProvider");

                    b.Navigation("SymbioteProvider");
                });
#pragma warning restore 612, 618
        }
    }
}
